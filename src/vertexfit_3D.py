import numpy as np
from math import cos, sin, sqrt
import scipy

import ROOT
######################################################################################################################################################################### 
def get_jacobi_vertexfit(p_, vertex_): # jacobi = dD/dq .... q = parameters
    px    =  p_[0]
    pz    =  p_[1]
    phi   =  p_[2]
    theta =  p_[3]
    
    vx = vertex_[0]
    vy = vertex_[1]
    vz = vertex_[2]
    
    JD = np.array([[-2*(-(px - vx)*cos(theta) + (pz - vz)*sin(theta)*cos(phi))*cos(theta) + 2*(vy*sin(theta)*cos(phi) + (px - vx)*sin(phi)*sin(theta))*sin(phi)*sin(theta),
        -2*(-vy*cos(theta) - (pz - vz)*sin(phi)*sin(theta))*sin(phi)*sin(theta) + 2*(-(px - vx)*cos(theta) + (pz - vz)*sin(theta)*cos(phi))*sin(theta)*cos(phi),
        -2*(pz - vz)*(-vy*cos(theta) - (pz - vz)*sin(phi)*sin(theta))*sin(theta)*cos(phi) - 2*(pz - vz)*(-(px - vx)*cos(theta) + (pz - vz)*sin(theta)*cos(phi))*sin(phi)*sin(theta) + (-2*vy*sin(phi)*sin(theta) + 2*(px - vx)*sin(theta)*cos(phi))*(vy*sin(theta)*cos(phi) + (px - vx)*sin(phi)*sin(theta)),
        (2*vy*sin(theta) - 2*(pz - vz)*sin(phi)*cos(theta))*(-vy*cos(theta) - (pz - vz)*sin(phi)*sin(theta)) + (2*(px - vx)*sin(theta) + 2*(pz - vz)*cos(phi)*cos(theta))*(-(px - vx)*cos(theta) + (pz - vz)*sin(theta)*cos(phi)) + (vy*sin(theta)*cos(phi) + (px - vx)*sin(phi)*sin(theta))*(2*vy*cos(phi)*cos(theta) + 2*(px - vx)*sin(phi)*cos(theta))]])

    return JD 
######################################################################################################################################################################### 
#########################################################################################################################################################################      
def get_jacobi_vertexfit_2(p_, vertex_): # jacobi = dD/dq .... q = parameters
    px    =  p_[0]
    pz    =  p_[1]
    dx    =  p_[2]
    dz    =  p_[3]
    
    vx = vertex_[0]
    vy = vertex_[1]
    vz = vertex_[2]
    
    JD = np.array([[-2*dz*(dx*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0) - dz*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))/sqrt(dx**2 + dz**2 + 1.0) + 2.0*(dx*vy/sqrt(dx**2 + dz**2 + 1.0) + 1.0*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))/sqrt(dx**2 + dz**2 + 1.0), 2*dx*(dx*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0) - dz*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))/sqrt(dx**2 + dz**2 + 1.0) - 2.0*(-dz*vy/sqrt(dx**2 + dz**2 + 1.0) - 1.0*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0))/sqrt(dx**2 + dz**2 + 1.0), (dx*vy/sqrt(dx**2 + dz**2 + 1.0) + 1.0*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))*(-2*dx**2*vy/(dx**2 + dz**2 + 1.0)**(3/2) - 2.0*dx*(px - vx)/(dx**2 + dz**2 + 1.0)**(3/2) + 2*vy/sqrt(dx**2 + dz**2 + 1.0)) + (dx*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0) - dz*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))*(-2*dx**2*(pz - vz)/(dx**2 + dz**2 + 1.0)**(3/2) + 2*dx*dz*(px - vx)/(dx**2 + dz**2 + 1.0)**(3/2) + 2*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0)) + (-dz*vy/sqrt(dx**2 + dz**2 + 1.0) - 1.0*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0))*(2*dx*dz*vy/(dx**2 + dz**2 + 1.0)**(3/2) + 2.0*dx*(pz - vz)/(dx**2 + dz**2 + 1.0)**(3/2)), (dx*vy/sqrt(dx**2 + dz**2 + 1.0) + 1.0*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))*(-2*dx*dz*vy/(dx**2 + dz**2 + 1.0)**(3/2) - 2.0*dz*(px - vx)/(dx**2 + dz**2 + 1.0)**(3/2)) + (dx*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0) - dz*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))*(-2*dx*dz*(pz - vz)/(dx**2 + dz**2 + 1.0)**(3/2) + 2*dz**2*(px - vx)/(dx**2 + dz**2 + 1.0)**(3/2) - 2*(px - vx)/sqrt(dx**2 + dz**2 + 1.0)) + (-dz*vy/sqrt(dx**2 + dz**2 + 1.0) - 1.0*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0))*(2*dz**2*vy/(dx**2 + dz**2 + 1.0)**(3/2) + 2.0*dz*(pz - vz)/(dx**2 + dz**2 + 1.0)**(3/2) - 2*vy/sqrt(dx**2 + dz**2 + 1.0))]])

    return JD   
######################################################################################################################################################################### 
######################################################################################################################################################################### 
def get_variance_vertexfit(covar_, JD_):   # var_ = sigma**2 = J.T * covar * J
    JD_ = JD_[0]
    var_ = covar_.dot(JD_)
    var_ = (JD_.T).dot(var_)
    
    return var_
######################################################################################################################################################################### 
######################################################################################################################################################################### 
def get_D_vertexfit(p_, vertex_): # D = [(p - vertex) x dir]**2
    px    =  p_[0]
    pz    =  p_[1]
    phi   =  p_[2]
    theta =  p_[3]
    
    vx = vertex_[0]
    vy = vertex_[1]
    vz = vertex_[2]
    
    D_ = (-vy*cos(theta) - (pz - vz)*sin(phi)*sin(theta))**2 + (-(px - vx)*cos(theta) + (pz - vz)*sin(theta)*cos(phi))**2 + (vy*sin(theta)*cos(phi) + (px - vx)*sin(phi)*sin(theta))**2
 
    return D_ 
######################################################################################################################################################################### 
#########################################################################################################################################################################     
def get_D_vertexfit_2(p_, vertex_): # D = [(p - vertex) x dir]**2
    px    =  p_[0]
    pz    =  p_[1]
    dx    =  p_[2]
    dz    =  p_[3]
    
    vx = vertex_[0]
    vy = vertex_[1]
    vz = vertex_[2]
   
    D_ = (dx*vy/sqrt(dx**2 + dz**2 + 1.0) + 1.0*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))**2 + (dx*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0) - dz*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))**2 + (-dz*vy/sqrt(dx**2 + dz**2 + 1.0) - 1.0*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0))**2    
    
    return D_ 
######################################################################################################################################################################### 
######################################################################################################################################################################### 
def get_diff_D_vertexfit(p_, vertex_): # dD_i / dv_j .... v is the vertex, i the current track and j the vertex component
    px    =  p_[0]
    pz    =  p_[1]
    phi   =  p_[2]
    theta =  p_[3]
    
    vx = vertex_[0]
    vy = vertex_[1]
    vz = vertex_[2]
    
    diff_D = np.array([[2.0*(-(px - vx)*cos(theta) + (pz - vz)*sin(theta)*cos(phi))*cos(theta) - 2.0*(vy*sin(theta)*cos(phi) + (px - vx)*sin(phi)*sin(theta))*sin(phi)*sin(theta),
            -2.0*(-vy*cos(theta) - (pz - vz)*sin(phi)*sin(theta))*cos(theta) + 2.0*(vy*sin(theta)*cos(phi) + (px - vx)*sin(phi)*sin(theta))*sin(theta)*cos(phi),
            2.0*(-vy*cos(theta) - (pz - vz)*sin(phi)*sin(theta))*sin(phi)*sin(theta) - 2.0*(-(px - vx)*cos(theta) + (pz - vz)*sin(theta)*cos(phi))*sin(theta)*cos(phi)]])

    return diff_D 
    
######################################################################################################################################################################### 
######################################################################################################################################################################### 
def get_diff_D_vertexfit_2(p_, vertex_): # dD_i / dv_j .... v is the vertex, i the current track and j the vertex component
    px    =  p_[0]
    pz    =  p_[1]
    dx    =  p_[2]
    dz    =  p_[3]
    
    vx = vertex_[0]
    vy = vertex_[1]
    vz = vertex_[2]
    
    diff_D = np.array([[2*dz*(dx*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0) - dz*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))/sqrt(dx**2 + dz**2 + 1.0) - 2.0*(dx*vy/sqrt(dx**2 + dz**2 + 1.0) + 1.0*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))/sqrt(dx**2 + dz**2 + 1.0), 2*dx*(dx*vy/sqrt(dx**2 + dz**2 + 1.0) + 1.0*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))/sqrt(dx**2 + dz**2 + 1.0) - 2*dz*(-dz*vy/sqrt(dx**2 + dz**2 + 1.0) - 1.0*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0))/sqrt(dx**2 + dz**2 + 1.0), -2*dx*(dx*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0) - dz*(px - vx)/sqrt(dx**2 + dz**2 + 1.0))/sqrt(dx**2 + dz**2 + 1.0) + 2.0*(-dz*vy/sqrt(dx**2 + dz**2 + 1.0) - 1.0*(pz - vz)/sqrt(dx**2 + dz**2 + 1.0))/sqrt(dx**2 + dz**2 + 1.0)]])
 
    return diff_D    
  
######################################################################################################################################################################### 
#########################################################################################################################################################################      
def get_diff2_D_vertexfit(p_, vertex_): # Nabla D 
    px    =  p_[0]
    pz    =  p_[1]
    phi   =  p_[2]
    theta =  p_[3]
    
    vx = vertex_[0]
    vy = vertex_[1]
    vz = vertex_[2]    
    
    diff2_D = np.array([[2.0*sin(phi)**2*sin(theta)**2 + 2.0*cos(theta)**2,
                    -2.0*sin(phi)*sin(theta)**2*cos(phi), -2.0*sin(theta)*cos(phi)*cos(theta)],
                    [-2.0*sin(phi)*sin(theta)**2*cos(phi),
                    2.0*sin(theta)**2*cos(phi)**2 + 2.0*cos(theta)**2,
                    -2.0*sin(phi)*sin(theta)*cos(theta)],
                    [-2.0*sin(theta)*cos(phi)*cos(theta),
                    -2.0*sin(phi)*sin(theta)*cos(theta),
                    2.0*sin(phi)**2*sin(theta)**2 + 2.0*sin(theta)**2*cos(phi)**2]])

    return diff2_D    
    
    
######################################################################################################################################################################### 
#########################################################################################################################################################################      
    
def get_diff2_D_vertexfit_2(p_, vertex_): # Nabla D 
    px    =  p_[0]
    pz    =  p_[1]
    dx    =  p_[2]
    dz    =  p_[3]
    
    vx = vertex_[0]
    vy = vertex_[1]
    vz = vertex_[2]    
    
    diff2_D = np.array([[2*dz**2/(dx**2 + dz**2 + 1.0) + 2.0/(dx**2 + dz**2 + 1.0), -2.0*dx/(dx**2 + dz**2 + 1.0), -2*dx*dz/(dx**2 + dz**2 + 1.0)], [-2.0*dx/(dx**2 + dz**2 + 1.0), 2*dx**2/(dx**2 + dz**2 + 1.0) + 2*dz**2/(dx**2 + dz**2 + 1.0), -2.0*dz/(dx**2 + dz**2 + 1.0)], [-2*dx*dz/(dx**2 + dz**2 + 1.0), -2.0*dz/(dx**2 + dz**2 + 1.0), 2*dx**2/(dx**2 + dz**2 + 1.0) + 2.0/(dx**2 + dz**2 + 1.0)]]) 
   

    return diff2_D      
    
#########################################################################################################################################################################   
######################################################################################################################################################################### 
def S_sq_Dist_2(vertex_, track_paras_, track_covars_):
    S_sum = 0.0

    for n, (t_p, t_cov) in enumerate(zip(track_paras_, track_covars_)):
        JD_curr  = get_jacobi_vertexfit_2(t_p, vertex_)
        D_curr   = get_D_vertexfit_2(t_p, vertex_)        
        t_cov = t_cov.reshape((4,4))
        var_curr = get_variance_vertexfit(t_cov, JD_curr)    
        S_sum = S_sum + D_curr/var_curr
    
    return S_sum
#########################################################################################################################################################################    
#########################################################################################################################################################################    
def grad_S_sq_D_2(vertex_, track_paras_, track_covars_):
    # compute gradients of the sum of weighted squared distances S = sum D_i(v) / var_i ..... over all tracks i            
    S0 = np.zeros(3)    

    for m, (t_p, t_cov) in enumerate(zip(track_paras_, track_covars_)):
        JD_curr  = get_jacobi_vertexfit_2(t_p, vertex_)
        t_cov = t_cov.reshape((4,4))
        var_curr = get_variance_vertexfit(t_cov, JD_curr)
        #print "varcurr", var_curr
        diff_D_curr = get_diff_D_vertexfit_2(t_p, vertex_)
        S0 = S0 + diff_D_curr/var_curr
    
    S0 = S0[0]

    return S0
#########################################################################################################################################################################    
#########################################################################################################################################################################    
def hesse_S_sq_D_2(vertex_, track_paras_, track_covars_):
    
    Hesse0 = np.zeros((3,3))
    
    for m, (t_p,t_cov) in enumerate(zip(track_paras_,track_covars_)):
        JD_curr  = get_jacobi_vertexfit_2(t_p, vertex_)
        t_cov = t_cov.reshape((4,4))
        var_curr = get_variance_vertexfit(t_cov, JD_curr)
        diff2_D_curr = get_diff2_D_vertexfit_2(t_p, vertex_)
        Hesse0 = Hesse0 + diff2_D_curr/var_curr
        
    return Hesse0 #+ 1.0e-4*np.eye(3)
#########################################################################################################################################################################    
#########################################################################################################################################################################    
def S_sq_Dist(vertex_, track_paras_, track_covars_):
    S_sum = 0.0

    for n, (t_p, t_cov) in enumerate(zip(self.pars, self.covs)):
        JD_curr  = get_jacobi_vertexfit(t_p, vertex_)
        D_curr   = get_D_vertexfit(t_p, vertex_)        
        t_cov = t_cov.reshape((4,4))
        var_curr = get_variance_vertexfit(t_cov, JD_curr)    
        S_sum = S_sum + D_curr/var_curr
    
    return S_sum
#########################################################################################################################################################################    
#########################################################################################################################################################################    
def grad_S_sq_D(vertex_, track_paras_, track_covars_):
    # compute gradients of the sum of weighted squared distances S = sum D_i(v) / var_i ..... over all tracks i            
    S0 = np.zeros(3)    

    for m, (t_p, t_cov) in enumerate(zip(track_paras_, track_covars_)):
        JD_curr  = get_jacobi_vertexfit(t_p, vertex_)
        t_cov = t_cov.reshape((4,4))
        var_curr = get_variance_vertexfit(t_cov, JD_curr)
        #print "varcurr", var_curr
        diff_D_curr = get_diff_D_vertexfit(t_p, vertex_)
        S0 = S0 + diff_D_curr/var_curr
    
    S0 = S0[0]

    return S0
#########################################################################################################################################################################    
#########################################################################################################################################################################    
def hesse_S_sq_D(vertex_, track_paras_, track_covars_):
    
    Hesse0 = np.zeros((3,3))
    
    for m, (t_p,t_cov) in enumerate(zip(track_paras_,track_covars_)):
        JD_curr  = get_jacobi_vertexfit(t_p, vertex_)
        t_cov = t_cov.reshape((4,4))
        var_curr = get_variance_vertexfit(t_cov, JD_curr)
        diff2_D_curr = get_diff2_D_vertexfit(t_p, vertex_)
        Hesse0 = Hesse0 + diff2_D_curr/var_curr
        
    return Hesse0 + 1.0e-3*np.eye(3)
#########################################################################################################################################################################    
#########################################################################################################################################################################

class S_sq_Dist_root_angle( ROOT.TPyMultiGenFunction ):
    def __init__( self ):
        #print "CREATED"
        ROOT.TPyMultiGenFunction.__init__( self, self )
        #self.samplesize = 0
        self.covs = 0
        self.pars = 0

    def NDim( self ): # total number of variables
        #print 'PYTHON NDim called'
        return 3.0

    def SetVals(self, covs_, pars_):
        #self.samplesize = samplesizet
        self.covs = covs_
        self.pars = pars_
    
    def DoEval( self, vertex_):
        #print "hai!"   
        S_sum = 0.0

        for n, (t_p, t_cov) in enumerate(zip(self.pars, self.covs)):

            JD_curr  = get_jacobi_vertexfit(t_p, vertex_)
            D_curr   = get_D_vertexfit(t_p, vertex_)            
            t_cov = t_cov.reshape((4,4))
            var_curr = get_variance_vertexfit(t_cov, JD_curr)        
            S_sum = S_sum + D_curr/var_curr
            
        print S_sum
    
        return S_sum     
#########################################################################################################################################################################    
#########################################################################################################################################################################    
class S_sq_Dist_root_2( ROOT.TPyMultiGenFunction ):
    def __init__( self ):
        #print "CREATED"
        ROOT.TPyMultiGenFunction.__init__( self, self )
        #self.samplesize = 0
        self.covs = 0
        self.pars = 0

    def NDim( self ): # total number of variables
        #print 'PYTHON NDim called'
        return 3.0

    def SetVals(self, covs_, pars_):
        #self.samplesize = samplesizet
        self.covs = covs_
        self.pars = pars_
    
    def DoEval( self, vertex_):
        #print "hai!"   
        S_sum = 0.0

        for n, (t_p, t_cov) in enumerate(zip(self.pars, self.covs)):

            JD_curr  = get_jacobi_vertexfit_2(t_p, vertex_)
            D_curr   = get_D_vertexfit_2(t_p, vertex_)            
            t_cov = t_cov.reshape((4,4))
            var_curr = get_variance_vertexfit(t_cov, JD_curr)        
            S_sum = S_sum + D_curr/var_curr
            
        print S_sum
    
        return S_sum 
#########################################################################################################################################################################    
#########################################################################################################################################################################           
def do_the_vertexfit_pythonopt(vertex_initial, track_paras, track_covars, parameterisation): # minimise sum of weighted squared distances = vertexfit

    #vertex_initial = [0,0,0]

    #print "covmats:"
    #
    #for i_ in track_covars:
    #    print i_

    # calculcate D, J and var for the initial vertex guess
    """for n, (t_p, t_cov) in enumerate(zip(track_paras, track_covars)):    
        D_curr   = get_D_vertexfit(t_p, vertex_initial)
        JD_curr  = get_jacobi_vertexfit(t_p, vertex_initial)
        
        t_cov = t_cov.reshape((4,4))                       
        var_curr = get_variance_vertexfit(t_cov, JD_curr) #"""
        

    # minimise sum of squared distances     
    # jac = grad_S_sq_D, 
    
    if parameterisation == "angle":
        res = scipy.optimize.minimize(S_sq_Dist, vertex_initial, args = (track_paras, track_covars), method='BFGS', jac = grad_S_sq_D, hess = hesse_S_sq_D, tol = 1.0e-05)#, options={'gtol': 1.0e-06, 'disp': True})
    
        
    elif parameterisation == "p_d":
    # jac = grad_S_sq_D_2, hess = hesse_S_sq_D_2
        res = scipy.optimize.minimize(S_sq_Dist_2, vertex_initial,  args = (track_paras, track_covars), method='BFGS', jac = False, tol = 1.0e-05)#, options={'gtol': 1.0e-06, 'disp': True})

    print "............................. PYTHON FOR VERTEX MINIMISATION .............................."
    print res 
    try:
        covar_pyth = np.linalg.inv(hesse_S_sq_D(res.x, track_paras, track_covars))
    except Exception, e1:
        # TODO try singular value composition? 
        print "Hesse matrix cant be inverted!"
            
        return res.x, [[999,999,999],[999,999,999],[999,999,999]]
  
    return res.x, covar_pyth
                   
######################################################################################################################################################################### 
######################################################################################################################################################################### 
def do_the_vertexfit_2(vertex_initial, track_paras, track_covars): # minimise sum of weighted squared distances = vertexfit

    #vertex_initial = [0,0,0]

    #print "covmats:"
    #
    #for i_ in track_covars:
    #    print i_

    convergence_check_old = 1000000
    
    iteration = 0
    while(1):
        iteration = iteration + 1
        
        #print len(track_paras)
        
        D_col   = np.zeros(len(track_paras))
        JD_col  = np.zeros((len(track_paras), 4))
        var_col = np.zeros(len(track_paras))

        # calculcate D, J and var for the initial vertex guess
        for n, (t_p, t_cov) in enumerate(zip(track_paras, track_covars)):    
            D_curr   = get_D_vertexfit_2(t_p, vertex_initial)
            D_col[n] = D_curr
            #print D_col[n].shape
            JD_curr  = get_jacobi_vertexfit_2(t_p, vertex_initial)
            JD_col[n] = JD_curr
            #print JD_col[n] 
            #print JD_col[n].shape
            
            t_cov = t_cov.reshape((4,4))                       
            var_curr = get_variance_vertexfit(t_cov, JD_curr)
            var_col[n] = var_curr
           
        """print "init D:"
        for d_ in D_col:
            print d_

        print " "
            
        print "init JD:"
        for jd_ in JD_col:
            print jd_    

        print " "

        print "init var:"
        for v_ in var_col:
            print v_ #"""
            
        # compute gradients of the sum of weighted squared distances S = sum D_i(v) / var_i ..... over all tracks i            
        S0 = np.zeros(3)    

        for m, t_p in enumerate(track_paras):
            diff_D_curr = get_diff_D_vertexfit_2(t_p, vertex_initial)
            S0 = S0 + diff_D_curr/var_col[m]
        
        S0 = S0[0]
        
        if iteration == 1:
            S0_best = S0
        #print "S0:", S0  
        
        # hesse matrix:    
        Hesse0 = np.zeros((3,3))
        
        for m, t_p in enumerate(track_paras):
            diff2_D_curr = get_diff2_D_vertexfit_2(t_p, vertex_initial)
            Hesse0 = Hesse0 + diff2_D_curr/var_col[m]
            
            
        print "cccccccccccccccccccccccccccccccccccccccccccccccccccccc"            
        print "Hesse0: ", Hesse0  
        
        print "cccccccccccccccccccccccccccccccccccccccccccccccccccccc"  
        # compute solution of Nabla S = 0 (which is the next vertex closer to the minimum )
        
        #print np.linalg.inv((Hesse0))     
        #print "vert init", vertex_initial        
        
        
        Hesse0 = Hesse0 +  1.0e-6*np.eye(3) # FIXME
        
        
        warnings.filterwarnings("error")
        
        try:
            Hesse0_inv = np.linalg.inv(Hesse0)
        except Exception, e:
            # TODO try singular value composition? 
            print "Hesse matrix cant be inverted!"
            if iteration != 1:
                print "vertex1", vertex1
                print "covar mat:"
                print covar_vertex1
                #print "sigmas, final covar:", np.sqrt(np.diag(covar_vertex1))
                return vertex1, covar_vertex1
            else:
                return [999,999,999], [[999,999,999],[999,999,999],[999,999,999]]
            
        vertex1 = vertex_initial - 0.2*Hesse0_inv.dot(S0)      # Newton / Rudis method
        
        #vertex1 = vertex_initial - np.linalg.inv(S0)
        
        
        
        
        covar_vertex1 = Hesse0_inv
        
        # calculate gradient at new vertex:
        #S0_test = np.zeros(3)    
        #for m, t_p in enumerate(track_paras):
        #    diff_D_curr = get_diff_D_vertexfit_2(t_p, vertex1)
        #    S0_test = S0_test + diff_D_curr/var_col[m]
        
        #S0_test = S0_test[0]
        #if np.linalg.norm(S0_test) < 1.0e-3:
        #    break
            
            
        if iteration > 10:
            break
      
        #print "..........................." 
        #print "vertex0", vertex_initial
        print "vertex1", vertex1
        #print "..........................."  
        
        convergence_check = abs(np.abs(np.sum(vertex_initial - vertex1)))
        print "..................................", convergence_check, ".................................."
        
        #if convergence_check < convergence_check_old:
        #    convergence_check_old = convergence_check
        #else:
        #    break
            
        #if convergence_check < 1.0e-05:
        #    break
            
        #print ".............................................................",   convergence_check
        
        vertex_initial = vertex1
        
        
    
    print "covar mat:"
    print covar_vertex1
    print "sigmas, final covar:", np.sqrt(np.diag(covar_vertex1))
    print "............................................................."
    print "............................................................."
    print " " 
    return vertex1, covar_vertex1
######################################################################################################################################################################### 
#########################################################################################################################################################################     
def do_the_vertexfit_root(vertex_initial, track_paras, track_covars, parameterisation): 
    # Choose method upon creation between:
    #kConjugateFR, kConjugatePR, kVectorBFGS,
    #kVectorBFGS2, kSteepestDescent
   
    minimiser = ROOT.Minuit2.Minuit2Minimizer(1)
    #minimiser = ROOT.Math.GSLMinimizer("ROOT::Math::kVectorBFGS2") # kVectorBFGS kConjugateFR kConjugatePR kSteepestDescent
    #minimiser = ROOT.Math.GSLSimAnMinimizer()
    #minimiser = ROOT.Math.GSLNLSMinimizer()
    print "mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm"

    minimiser.SetMaxFunctionCalls(1000000)
    minimiser.SetMaxIterations(100000)
    minimiser.SetTolerance(0.001)

    if parameterisation == "angle":
        fct_sum = S_sq_Dist_root_angle() # define the function to minimise
        
    elif parameterisation == "p_d":
        fct_sum = S_sq_Dist_root_2() # define the function to minimise
                
    fct_sum.SetVals(track_covars, track_paras )
    minimiser.SetFunction(fct_sum)

    step = [0.01, 0.01, 0.01]
    start = vertex_initial # #[0.0, 0.0, 0.0] # 

    #minimiser.SetDefaultPrintLevel(2)

    minimiser.SetVariable(0,"x",start[0], step[0])
    minimiser.SetVariable(1,"y",start[1], step[1])
    minimiser.SetVariable(2,"z",start[2], step[2])




    retval_min = minimiser.Minimize() # start the minimiser
                
    minval = minimiser.MinValue() # minvalue of the function to minimise (chi2fct3d_angles() in this case)

    # print the fit results after the fit - see whether it converges etc.
    minimiser.PrintResults()
                
    stat = minimiser.Status() # status 0 means that the errors of the fit are ok.
    #status = 1    : Covariance was made pos defined.  status 1 means, you cant trust the errorbars (internet info)
    #status = 2    : Hesse is invalid
    #status = 3    : Edm is above max
    #status = 4    : Reached call limit
    #status = 5    : Any other failure
    
    covar_stat = minimiser.CovMatrixStatus()

    vertex_root = minimiser.X()
    minimiser.PrintResults()

    print "print mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm", [vertex_root[0], vertex_root[1], vertex_root[2]]

    return [vertex_root[0], vertex_root[1], vertex_root[2]], [[999,999,999],[999,999,999],[999,999,999]]

    
######################################################################################################################################################################### 
#########################################################################################################################################################################     
    
######################################################################################################################################################################### 
######################################################################################################################################################################### 

def do_the_vertexfit(vertex_initial, track_paras, track_covars): # minimise sum of weighted squared distances = vertexfit

    #vertex_initial = [0,0,0]

    #print "covmats:"
    #
    #for i_ in track_covars:
    #    print i_

    convergence_check_old = 1000000
    
    interation = 0
    while(1):
        interation = interation + 1
        
        #print len(track_paras)
        
        D_col   = np.zeros(len(track_paras))
        JD_col  = np.zeros((len(track_paras), 4))
        var_col = np.zeros(len(track_paras))

        # calculcate D, J and var for the initial vertex guess
        for n, (t_p, t_cov) in enumerate(zip(track_paras, track_covars)):    
            D_curr   = get_D_vertexfit(t_p, vertex_initial)
            D_col[n] = D_curr
            #print D_col[n].shape
            JD_curr  = get_jacobi_vertexfit(t_p, vertex_initial)
            JD_col[n] = JD_curr
            #print JD_col[n] 
            #print JD_col[n].shape
            
            t_cov = t_cov.reshape((4,4))                       
            var_curr = get_variance_vertexfit(t_cov, JD_curr)
            var_col[n] = var_curr
           
        """print "init D:"
        for d_ in D_col:
            print d_

        print " "
            
        print "init JD:"
        for jd_ in JD_col:
            print jd_    

        print " "

        print "init var:"
        for v_ in var_col:
            print v_ #"""
            
        # compute gradients of the sum of weighted squared distances S = sum D_i(v) / var_i ..... over all tracks i            
        S0 = np.zeros(3)    

        for m, t_p in enumerate(track_paras):
            diff_D_curr = get_diff_D_vertexfit(t_p, vertex_initial)
            S0 = S0 + diff_D_curr/var_col[m]
        
        S0 = S0[0]
        #print "S0:", S0  
        
        # hesse matrix:    
        Hesse0 = np.zeros((3,3))
        
        for m, t_p in enumerate(track_paras):
            diff2_D_curr = get_diff2_D_vertexfit(t_p, vertex_initial)
            Hesse0 = Hesse0 + diff2_D_curr/var_col[m]
        
        #print "Hesse0: ", Hesse0  
        
        # compute solution of Nabla S = 0 (which is the next vertex closer to the minimum )
        
        #print np.linalg.inv((Hesse0))     
        #print "vert init", vertex_initial        
        #print Hesse0.shape
        
        warnings.filterwarnings("error")
        
        try:
            Hesse0_inv = np.linalg.inv(Hesse0)
        except Exception, e:
            # TODO try singular value composition? 
            print "Hesse matrix cant be inverted!"
            if interation != 1:
                print "vertex1", vertex1
                print "covar mat:"
                print covar_vertex1
                print "sigmas, final covar:", np.sqrt(np.diag(covar_vertex1))
                return vertex1, covar_vertex1
            else:
                return [999,999,999], [[999,999,999],[999,999,999],[999,999,999]]
            
        vertex1 = vertex_initial - 0.8*Hesse0_inv.dot(S0)
        
        #print "..........................." 
        #print "vertex0", vertex_initial
        print "vertex1", vertex1
        #print "..........................."  
        
        convergence_check = abs(np.abs(np.sum(vertex_initial - vertex1)))
        
        if convergence_check < convergence_check_old:
            convergence_check_old = convergence_check
        else:
            break
            
        if convergence_check < 1.0e-03:
            break
            
        print ".............................................................",   convergence_check
        
        vertex_initial = vertex1
        
        covar_vertex1 = Hesse0_inv
    
    print "covar mat:"
    print covar_vertex1
    print "sigmas, final covar:", np.sqrt(np.diag(covar_vertex1))
    print "............................................................."
    print "............................................................."
    print " " 
    return vertex1, covar_vertex1
######################################################################################################################################################################### 
######################################################################################################################################################################### 
def get_midpoint_error_prop_covs_angles(pars, pars1, cov1, cov2):

    px0    = pars[0] 
    pz0    = pars[1] 
    phi0   = pars[2] 
    theta0 = pars[3] 

    px1    = pars1[0] 
    pz1    = pars1[1] 
    phi1   = pars1[2]
    theta1 = pars1[3]
        
    #print "params0", px0, pz0, phi0, theta0
    #print "params1", px1, pz1, phi1, theta1
    #np.set_printoptions(threshold=np.nan)
    #################################################################################     
    # jacobians of the two closest points of the line pair
    # calculated by sympy (file jacobis.py)

    
    J0 = np.array([[((-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)) + 1,
 ((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) - (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 -((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)) + ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(theta0)*cos(phi0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(phi0)*sin(theta0) - ((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) - sin(phi0)*sin(theta0)*cos(theta1)**2)*sin(theta0)*cos(phi0) - (-(-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta1)*cos(phi1) + sin(theta0)*cos(phi0)*cos(theta1)**2)*sin(phi0)*sin(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta1))*cos(theta0))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2 + ((-px0 + px1)*((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) - sin(phi0)*sin(theta0)*cos(theta1)**2) + (-pz0 + pz1)*(sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta1)))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((-px0 + px1)*(-(-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*cos(theta0)*cos(theta1) + sin(phi1)*sin(theta0)*sin(theta1))*sin(phi1)*sin(theta1) + (-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1)))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)) + ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*cos(phi0)*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)) + ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*cos(theta0) - ((sin(phi0)*cos(theta0)*cos(theta1) + sin(phi1)*sin(theta0)*sin(theta1))*cos(theta1) - (-sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) - (-(-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) - (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*cos(phi0)*cos(theta0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*sin(theta0) - (-(sin(phi0)*cos(theta0)*cos(theta1) + sin(phi1)*sin(theta0)*sin(theta1))*sin(phi1)*sin(theta1) + (-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1))*cos(theta0))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2,
 (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(theta1)*cos(phi1) - (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(phi1)*sin(theta1))*cos(theta0) - ((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta1)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0) - (-(sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta1)*cos(phi1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1) - sin(theta1)*cos(phi1)*cos(theta0)*cos(theta1))*sin(phi0)*sin(theta0))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2 + ((-px0 + px1)*((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta1)*cos(theta0)*cos(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(theta1)*cos(phi1) - (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(phi1)*sin(theta1)))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-((-sin(phi0)*sin(theta0)*sin(theta1) - sin(phi1)*cos(theta0)*cos(theta1))*cos(theta1) - (sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*cos(phi1)*cos(theta1) - (-sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) + sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) - (-(sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*cos(theta1) + (-sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) + sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) - (-(-sin(phi0)*sin(theta0)*sin(theta1) - sin(phi1)*cos(theta0)*cos(theta1))*sin(phi1)*sin(theta1) - (sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*cos(theta1) + (sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(phi1)*cos(theta1))*cos(theta0))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2 + ((-px0 + px1)*(-(sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*cos(theta1) + (-sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) + sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(-sin(phi0)*sin(theta0)*sin(theta1) - sin(phi1)*cos(theta0)*cos(theta1))*sin(phi1)*sin(theta1) - (sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*cos(theta1) + (sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(phi1)*cos(theta1)))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))],
 [((-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) - (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*sin(theta0)*cos(phi0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)) + ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(theta0)*cos(phi0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(phi0)*sin(theta0) - ((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) - sin(phi0)*sin(theta0)*cos(theta1)**2)*sin(theta0)*cos(phi0) - (-(-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta1)*cos(phi1) + sin(theta0)*cos(phi0)*cos(theta1)**2)*sin(phi0)*sin(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta1))*cos(theta0))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2 + ((-px0 + px1)*((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) - sin(phi0)*sin(theta0)*cos(theta1)**2) + (-pz0 + pz1)*(sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta1)))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((-px0 + px1)*(-(-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*cos(theta0)*cos(theta1) + sin(phi1)*sin(theta0)*sin(theta1))*sin(phi1)*sin(theta1) + (-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1)))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)) + ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*sin(phi0)*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)) + ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*cos(theta0) - ((sin(phi0)*cos(theta0)*cos(theta1) + sin(phi1)*sin(theta0)*sin(theta1))*cos(theta1) - (-sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) - (-(-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) - (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*cos(phi0)*cos(theta0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*sin(theta0) - (-(sin(phi0)*cos(theta0)*cos(theta1) + sin(phi1)*sin(theta0)*sin(theta1))*sin(phi1)*sin(theta1) + (-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1))*cos(theta0))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2,
 (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(theta1)*cos(phi1) - (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(phi1)*sin(theta1))*cos(theta0) - ((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta1)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0) - (-(sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta1)*cos(phi1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1) - sin(theta1)*cos(phi1)*cos(theta0)*cos(theta1))*sin(phi0)*sin(theta0))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2 + ((-px0 + px1)*((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta1)*cos(theta0)*cos(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(theta1)*cos(phi1) - (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(phi1)*sin(theta1)))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-((-sin(phi0)*sin(theta0)*sin(theta1) - sin(phi1)*cos(theta0)*cos(theta1))*cos(theta1) - (sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*cos(phi1)*cos(theta1) - (-sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) + sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) - (-(sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*cos(theta1) + (-sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) + sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) - (-(-sin(phi0)*sin(theta0)*sin(theta1) - sin(phi1)*cos(theta0)*cos(theta1))*sin(phi1)*sin(theta1) - (sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*cos(theta1) + (sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(phi1)*cos(theta1))*cos(theta0))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2 + ((-px0 + px1)*(-(sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*cos(theta1) + (-sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) + sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(-sin(phi0)*sin(theta0)*sin(theta1) - sin(phi1)*cos(theta0)*cos(theta1))*sin(phi1)*sin(theta1) - (sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*cos(theta1) + (sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(phi1)*cos(theta1)))*sin(phi0)*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))],
 [((-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) - (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)) + 1,
 ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(theta0)*cos(phi0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(phi0)*sin(theta0) - ((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) - sin(phi0)*sin(theta0)*cos(theta1)**2)*sin(theta0)*cos(phi0) - (-(-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta1)*cos(phi1) + sin(theta0)*cos(phi0)*cos(theta1)**2)*sin(phi0)*sin(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta1))*cos(theta0))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2 + ((-px0 + px1)*((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) - sin(phi0)*sin(theta0)*cos(theta1)**2) + (-pz0 + pz1)*(sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta1)))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((-px0 + px1)*(-(-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*cos(theta0)*cos(theta1) + sin(phi1)*sin(theta0)*sin(theta1))*sin(phi1)*sin(theta1) + (-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1)))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)) - ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*sin(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)) + ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*cos(theta0) - ((sin(phi0)*cos(theta0)*cos(theta1) + sin(phi1)*sin(theta0)*sin(theta1))*cos(theta1) - (-sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) - (-(-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) - (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*cos(phi0)*cos(theta0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*sin(theta0) - (-(sin(phi0)*cos(theta0)*cos(theta1) + sin(phi1)*sin(theta0)*sin(theta1))*sin(phi1)*sin(theta1) + (-sin(theta0)*sin(theta1)*cos(phi1) - cos(phi0)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1))*cos(theta0))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2,
 (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(theta1)*cos(phi1) - (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(phi1)*sin(theta1))*cos(theta0) - ((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta1)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0) - (-(sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta1)*cos(phi1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1) - sin(theta1)*cos(phi1)*cos(theta0)*cos(theta1))*sin(phi0)*sin(theta0))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2 + ((-px0 + px1)*((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi1)*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta1)*cos(theta0)*cos(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(theta1)*cos(phi1) - (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(phi1)*sin(theta1)))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0)),
 ((-px0 + px1)*(-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1)))*(-((-sin(phi0)*sin(theta0)*sin(theta1) - sin(phi1)*cos(theta0)*cos(theta1))*cos(theta1) - (sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*cos(phi1)*cos(theta1) - (-sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) + sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) - (-(sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*cos(theta1) + (-sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) + sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) - (-(-sin(phi0)*sin(theta0)*sin(theta1) - sin(phi1)*cos(theta0)*cos(theta1))*sin(phi1)*sin(theta1) - (sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*cos(theta1) + (sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(phi1)*cos(theta1))*cos(theta0))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))**2 + ((-px0 + px1)*(-(sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*cos(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*cos(theta1) + (-sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) + sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi1)*sin(theta1)) + (-pz0 + pz1)*(-(-sin(phi0)*sin(theta0)*sin(theta1) - sin(phi1)*cos(theta0)*cos(theta1))*sin(phi1)*sin(theta1) - (sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*cos(theta1) + (sin(theta0)*sin(theta1)*cos(phi0) + cos(phi1)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(phi1)*cos(theta1)))*cos(theta0)/(((sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*cos(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta1)*cos(phi1))*sin(phi0)*sin(theta0) + (-(-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*cos(theta1) + (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi1)*sin(theta1))*sin(theta0)*cos(phi0) + (-(sin(phi0)*sin(theta0)*cos(theta1) - sin(phi1)*sin(theta1)*cos(theta0))*sin(phi1)*sin(theta1) + (-sin(theta0)*cos(phi0)*cos(theta1) + sin(theta1)*cos(phi1)*cos(theta0))*sin(theta1)*cos(phi1))*cos(theta0))]])
 
    #print J0.shape
 
    J1 = np.array([[(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(theta0)*cos(phi0) - (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(phi0)*sin(theta0))*cos(theta1) - ((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0) + sin(phi0)*sin(theta0)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1) - (-(sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta0)*cos(phi0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0) - sin(theta0)*cos(phi0)*cos(theta0)*cos(theta1))*sin(phi1)*sin(theta1))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2 + ((px0 - px1)*((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0) + sin(phi0)*sin(theta0)*cos(theta0)*cos(theta1)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(theta0)*cos(phi0) - (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(phi0)*sin(theta0)))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(theta0) + (-sin(phi0)*cos(theta0)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*cos(phi0)*cos(theta0) - (sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) - sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) - (-(sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*cos(theta0) + (sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) - sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) - (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*cos(theta0) - (-sin(phi0)*cos(theta0)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1))*sin(phi0)*sin(theta0) + (sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(phi0)*cos(theta0))*cos(theta1))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2 + ((px0 - px1)*(-(sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*cos(theta0) + (sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) - sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*cos(theta0) - (-sin(phi0)*cos(theta0)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1))*sin(phi0)*sin(theta0) + (sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(phi0)*cos(theta0)))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)) + 1,
 ((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) - (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 -((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)) + ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(theta1)*cos(phi1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(phi1)*sin(theta1) - ((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) - sin(phi1)*sin(theta1)*cos(theta0)**2)*sin(theta1)*cos(phi1) - (-(-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta0)*cos(phi0) + sin(theta1)*cos(phi1)*cos(theta0)**2)*sin(phi1)*sin(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta0))*cos(theta1))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2 + ((px0 - px1)*((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) - sin(phi1)*sin(theta1)*cos(theta0)**2) + (pz0 - pz1)*(-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta0)))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((px0 - px1)*(-(-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(sin(phi0)*sin(theta0)*sin(theta1) + sin(phi1)*cos(theta0)*cos(theta1))*sin(phi0)*sin(theta0) + (-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0)))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)) + ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*cos(phi1)*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)) + ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-((sin(phi0)*sin(theta0)*sin(theta1) + sin(phi1)*cos(theta0)*cos(theta1))*cos(theta0) - (sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) - ((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*cos(theta1) - (-(-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) - (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*cos(phi1)*cos(theta1) - (-(sin(phi0)*sin(theta0)*sin(theta1) + sin(phi1)*cos(theta0)*cos(theta1))*sin(phi0)*sin(theta0) + (-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0))*cos(theta1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*sin(theta1))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2],
 [(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(theta0)*cos(phi0) - (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(phi0)*sin(theta0))*cos(theta1) - ((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0) + sin(phi0)*sin(theta0)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1) - (-(sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta0)*cos(phi0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0) - sin(theta0)*cos(phi0)*cos(theta0)*cos(theta1))*sin(phi1)*sin(theta1))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2 + ((px0 - px1)*((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0) + sin(phi0)*sin(theta0)*cos(theta0)*cos(theta1)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(theta0)*cos(phi0) - (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(phi0)*sin(theta0)))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(theta0) + (-sin(phi0)*cos(theta0)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*cos(phi0)*cos(theta0) - (sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) - sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) - (-(sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*cos(theta0) + (sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) - sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) - (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*cos(theta0) - (-sin(phi0)*cos(theta0)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1))*sin(phi0)*sin(theta0) + (sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(phi0)*cos(theta0))*cos(theta1))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2 + ((px0 - px1)*(-(sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*cos(theta0) + (sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) - sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*cos(theta0) - (-sin(phi0)*cos(theta0)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1))*sin(phi0)*sin(theta0) + (sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(phi0)*cos(theta0)))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) - (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*sin(theta1)*cos(phi1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)) + ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(theta1)*cos(phi1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(phi1)*sin(theta1) - ((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) - sin(phi1)*sin(theta1)*cos(theta0)**2)*sin(theta1)*cos(phi1) - (-(-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta0)*cos(phi0) + sin(theta1)*cos(phi1)*cos(theta0)**2)*sin(phi1)*sin(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta0))*cos(theta1))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2 + ((px0 - px1)*((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) - sin(phi1)*sin(theta1)*cos(theta0)**2) + (pz0 - pz1)*(-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta0)))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((px0 - px1)*(-(-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(sin(phi0)*sin(theta0)*sin(theta1) + sin(phi1)*cos(theta0)*cos(theta1))*sin(phi0)*sin(theta0) + (-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0)))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)) + ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*sin(phi1)*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)) + ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-((sin(phi0)*sin(theta0)*sin(theta1) + sin(phi1)*cos(theta0)*cos(theta1))*cos(theta0) - (sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) - ((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*cos(theta1) - (-(-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) - (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*cos(phi1)*cos(theta1) - (-(sin(phi0)*sin(theta0)*sin(theta1) + sin(phi1)*cos(theta0)*cos(theta1))*sin(phi0)*sin(theta0) + (-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0))*cos(theta1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*sin(theta1))*sin(phi1)*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2],
 [(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(theta0)*cos(phi0) - (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(phi0)*sin(theta0))*cos(theta1) - ((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0) + sin(phi0)*sin(theta0)*cos(theta0)*cos(theta1))*sin(theta1)*cos(phi1) - (-(sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta0)*cos(phi0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0) - sin(theta0)*cos(phi0)*cos(theta0)*cos(theta1))*sin(phi1)*sin(theta1))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2 + ((px0 - px1)*((sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) + sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0) + sin(phi0)*sin(theta0)*cos(theta0)*cos(theta1)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(theta0)*cos(phi0) - (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(phi0)*sin(theta0)))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(theta0) + (-sin(phi0)*cos(theta0)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*cos(phi0)*cos(theta0) - (sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) - sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) - (-(sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*cos(theta0) + (sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) - sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) - (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*cos(theta0) - (-sin(phi0)*cos(theta0)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1))*sin(phi0)*sin(theta0) + (sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(phi0)*cos(theta0))*cos(theta1))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2 + ((px0 - px1)*(-(sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*cos(theta0) + (sin(phi0)*sin(theta1)*cos(phi1)*cos(theta0) - sin(phi1)*sin(theta1)*cos(phi0)*cos(theta0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*cos(theta0) - (-sin(phi0)*cos(theta0)*cos(theta1) - sin(phi1)*sin(theta0)*sin(theta1))*sin(phi0)*sin(theta0) + (sin(theta0)*sin(theta1)*cos(phi1) + cos(phi0)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(phi0)*cos(theta0)))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) - (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)) + 1,
 ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(theta1)*cos(phi1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(phi1)*sin(theta1) - ((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) - sin(phi1)*sin(theta1)*cos(theta0)**2)*sin(theta1)*cos(phi1) - (-(-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(theta0)*cos(phi0) + sin(theta1)*cos(phi1)*cos(theta0)**2)*sin(phi1)*sin(theta1) - (-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta0))*cos(theta1))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2 + ((px0 - px1)*((-sin(phi0)*sin(phi1)*sin(theta0)*sin(theta1) - sin(theta0)*sin(theta1)*cos(phi0)*cos(phi1))*sin(phi0)*sin(theta0) - sin(phi1)*sin(theta1)*cos(theta0)**2) + (pz0 - pz1)*(-sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1)*cos(theta0) + sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0)*cos(theta0)))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)),
 ((px0 - px1)*(-(-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(sin(phi0)*sin(theta0)*sin(theta1) + sin(phi1)*cos(theta0)*cos(theta1))*sin(phi0)*sin(theta0) + (-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0)))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)) - ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*sin(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1)) + ((px0 - px1)*(-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0)) + (pz0 - pz1)*(-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0)))*(-((sin(phi0)*sin(theta0)*sin(theta1) + sin(phi1)*cos(theta0)*cos(theta1))*cos(theta0) - (sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) - ((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*cos(theta1) - (-(-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*cos(theta0) + (sin(phi0)*sin(theta0)*cos(phi1)*cos(theta1) - sin(phi1)*sin(theta0)*cos(phi0)*cos(theta1))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) - (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*cos(phi1)*cos(theta1) - (-(sin(phi0)*sin(theta0)*sin(theta1) + sin(phi1)*cos(theta0)*cos(theta1))*sin(phi0)*sin(theta0) + (-sin(theta0)*sin(theta1)*cos(phi0) - cos(phi1)*cos(theta0)*cos(theta1))*sin(theta0)*cos(phi0))*cos(theta1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*sin(theta1))*cos(theta1)/(((-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*cos(theta0) - (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(theta0)*cos(phi0))*sin(phi1)*sin(theta1) + (-(sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*cos(theta0) + (sin(phi0)*sin(theta0)*sin(theta1)*cos(phi1) - sin(phi1)*sin(theta0)*sin(theta1)*cos(phi0))*sin(phi0)*sin(theta0))*sin(theta1)*cos(phi1) + (-(-sin(phi0)*sin(theta0)*cos(theta1) + sin(phi1)*sin(theta1)*cos(theta0))*sin(phi0)*sin(theta0) + (sin(theta0)*cos(phi0)*cos(theta1) - sin(theta1)*cos(phi1)*cos(theta0))*sin(theta0)*cos(phi0))*cos(theta1))**2]])
    
    
    #print J1.shape
    
    J = 0.5*(J0 + J1)
    
    #print J.shape   
    #################################################################################             
    #################################################################################     
    #combined covariance matrix, block (v1   0
    #                                   0    v2)        
    #print cov1.shape
    #print cov2.shape      
    cov1 = cov1.reshape((4,4))
    cov2 = cov2.reshape((4,4))    
    cov_zeros = np.zeros((4,4))
    
    row1 = np.vstack((cov1,cov_zeros))    
    row2 = np.vstack((cov_zeros,cov2))

    comb_cov = np.hstack((row1,row2))  
    #print cov1
    #np.savetxt("cov.dat", comb_cov)
    #print comb_cov
    ################################################################################# 
    #cov (midpoint) = J V J^T        
    covi = np.dot(J, np.dot(comb_cov, J.T))
   
    #print covi.shape     
    #print covi    
    #print np.sqrt(np.diag(covi))
   
    return covi 
########################################_2################################################################################################################################# 
######################################################################################################################################################################### 
def get_midpoint_error_prop_covs_2(pars, pars1, cov1, cov2):

    px0 = pars[0]
    pz0 = pars[1]
    
    dx0 = pars[2]
    dz0 = pars[3] 
    
    px1 = pars1[0]
    pz1 = pars1[1]
    
    dx1 = pars1[2]
    dz1 = pars1[3] 
    


    J1 = np.array([[dx0*(dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))) + 1,
     dx0*(-dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     -dx0**2*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/((dx0**2 + dz0**2 + 1.0)**(3/2)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))) + dx0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(dx0**2*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dx0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(-dz1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0*(dx1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-dx1*(-1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - (-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + dx0*((-px0 + px1)*(-dz1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))) + ((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     -dx0*dz0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/((dx0**2 + dz0**2 + 1.0)**(3/2)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))) + dx0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(dx0*dz0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(-dz1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0**2*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dz0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(dx1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-dx1*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - (dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + dx0*((-px0 + px1)*(-dz1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     dx0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     dx0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(-dx0*(dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0*(-dx1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dx1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(dx1**2*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - (1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + dx0*((-px0 + px1)*(dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(-dx1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dx1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     dx0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(-dx0*(dz1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dz1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0*(-dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*(1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(dx1*dz1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1**2*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dz1*(1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + (-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + dx0*((-px0 + px1)*(dz1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dz1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(-dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*(1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0)))],
     [1.0*(dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     1.0*(-dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     -1.0*dx0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/((dx0**2 + dz0**2 + 1.0)**(3/2)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))) + 1.0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(dx0**2*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dx0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(-dz1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0*(dx1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-dx1*(-1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - (-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + 1.0*((-px0 + px1)*(-dz1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     -1.0*dz0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/((dx0**2 + dz0**2 + 1.0)**(3/2)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))) + 1.0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(dx0*dz0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(-dz1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0**2*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dz0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(dx1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-dx1*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - (dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + 1.0*((-px0 + px1)*(-dz1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     1.0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     1.0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     1.0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(-dx0*(dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0*(-dx1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dx1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(dx1**2*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - (1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + 1.0*((-px0 + px1)*(dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(-dx1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dx1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     1.0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(-dx0*(dz1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dz1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0*(-dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*(1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(dx1*dz1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1**2*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dz1*(1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + (-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + 1.0*((-px0 + px1)*(dz1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dz1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(-dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*(1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0)))],
     [dz0*(dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     dz0*(-dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))) + 1,
     -dx0*dz0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/((dx0**2 + dz0**2 + 1.0)**(3/2)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))) + dz0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(dx0**2*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dx0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(-dz1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0*(dx1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-dx1*(-1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - (-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + dz0*((-px0 + px1)*(-dz1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     -dz0**2*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/((dx0**2 + dz0**2 + 1.0)**(3/2)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))) + dz0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(dx0*dz0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(-dz1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0**2*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dz0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(dx1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-dx1*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - (dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + dz0*((-px0 + px1)*(-dz1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))) + ((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     dz0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     dz0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(-dx0*(dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0*(-dx1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dx1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(dx1**2*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - (1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + dz0*((-px0 + px1)*(dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(-dx1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dx1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))),
     dz0*((-px0 + px1)*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))*(-dx0*(dz1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dz1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0*(-dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*(1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(dx1*dz1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1**2*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dz1*(1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + (-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0))**2) + dz0*((-px0 + px1)*(dz1**2*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*dz1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) - (-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)) + (-pz0 + pz1)*(-dx1*dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*(dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx1**2 + dz1**2 + 1.0)**(3/2) - 1.0*(1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0)))/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx0*(-dz1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(dx1*(-dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-dx1*(1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(-1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx1**2 + dz1**2 + 1.0))/sqrt(dx0**2 + dz0**2 + 1.0)))]])

    #################################################################################     
    # jacobians of the two closest points of the line pair
    # calculated by matlab and copied in here
    
    J2 = np.array([[dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 dx1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 dx1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(-dx1*(dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1*(-dx0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dx0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(dx0**2*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - (-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + dx1*((px0 - px1)*(dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(-dx0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dx0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 dx1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(-dx1*(dz0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dz0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1*(-dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*(-1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(dx0*dz0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0**2*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dz0*(-1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + (1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + dx1*((px0 - px1)*(dz0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dz0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(-dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*(-1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 dx1*(dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))) + 1,
 dx1*(-dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 -dx1**2*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/((dx1**2 + dz1**2 + 1.0)**(3/2)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))) + dx1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(dx1**2*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dx1*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-dz0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1*(dx0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-dx0*(1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(-1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - (-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + dx1*((px0 - px1)*(-dz0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))) + ((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 -dx1*dz1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/((dx1**2 + dz1**2 + 1.0)**(3/2)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))) + dx1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(dx1*dz1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-dz0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1**2*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dz1*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-dx0*(1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(-1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - (dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + dx1*((px0 - px1)*(-dz0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0)))],
 [1.0*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 1.0*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 1.0*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(-dx1*(dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1*(-dx0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dx0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(dx0**2*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - (-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + 1.0*((px0 - px1)*(dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(-dx0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dx0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 1.0*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(-dx1*(dz0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dz0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1*(-dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*(-1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(dx0*dz0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0**2*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dz0*(-1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + (1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + 1.0*((px0 - px1)*(dz0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dz0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(-dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*(-1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 1.0*(dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 1.0*(-dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 -1.0*dx1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/((dx1**2 + dz1**2 + 1.0)**(3/2)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))) + 1.0*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(dx1**2*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dx1*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-dz0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1*(dx0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-dx0*(1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(-1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - (-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + 1.0*((px0 - px1)*(-dz0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 -1.0*dz1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/((dx1**2 + dz1**2 + 1.0)**(3/2)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))) + 1.0*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(dx1*dz1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-dz0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1**2*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dz1*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-dx0*(1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(-1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - (dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + 1.0*((px0 - px1)*(-dz0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0)))],
 [dz1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 dz1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(-dx1*(dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1*(-dx0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dx0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(dx0**2*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - (-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + dz1*((px0 - px1)*(dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx0*dx1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(-dx0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + 1.0*dx0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0**2*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 dz1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(-dx1*(dz0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dz0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1*(-dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*(-1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(dx0*dz0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dx0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - dz0**2*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dz0*(-1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + (1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + dz1*((px0 - px1)*(dz0**2*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*dz0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - dz0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dx1*dz0/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - (dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(-dx0*dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) + dx0*(-dx0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/(dx0**2 + dz0**2 + 1.0)**(3/2) - 1.0*(-1.0*dz0**2/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dz0*dz1/((dx0**2 + dz0**2 + 1.0)**(3/2)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 dz1*(dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 dz1*(-dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))) + 1,
 -dx1*dz1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/((dx1**2 + dz1**2 + 1.0)**(3/2)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))) + dz1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(dx1**2*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) + dx1*dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dx1*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-dz0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - dz1*(dx0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-dx0*(1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(-1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - (-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + dz1*((px0 - px1)*(-dz0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(-dx0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx1**2*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))),
 -dz1**2*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/((dx1**2 + dz1**2 + 1.0)**(3/2)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))) + dz1*((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))*(dx1*dz1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dx1*(-dz0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1**2*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) + 1.0*dz1*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/(dx1**2 + dz1**2 + 1.0)**(3/2) - dz1*(dx0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - 1.0*(-dx0*(1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(-1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) - (dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))**2) + dz1*((px0 - px1)*(-dz0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(1.0*dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0*dx1*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(-dx0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + dx1*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(-1.0*dz0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) + 1.0*dz1**2/(sqrt(dx0**2 + dz0**2 + 1.0)*(dx1**2 + dz1**2 + 1.0)**(3/2)) - 1.0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0))) + ((px0 - px1)*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)) + (pz0 - pz1)*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0)))/(sqrt(dx1**2 + dz1**2 + 1.0)*(dx1*(-dz0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + 1.0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + dz1*(dx0*(dx0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - dx1*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) - 1.0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0) + 1.0*(-dx0*(-1.0*dx0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) + 1.0*dx1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0) + dz0*(1.0*dz0/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)) - 1.0*dz1/(sqrt(dx0**2 + dz0**2 + 1.0)*sqrt(dx1**2 + dz1**2 + 1.0)))/sqrt(dx0**2 + dz0**2 + 1.0))/sqrt(dx1**2 + dz1**2 + 1.0)))]])
    
    
    
    
    
    
     
        
    J = 0.5*(J1 + J2)   
    ################################################################################# 
            
    #################################################################################     
    #combined covariance matrix, block (v1   0
    #                                   0    v2)    
    cov1 = cov1.reshape((4,4))    
    cov2 = cov2.reshape((4,4))    
    cov_zeros = np.zeros((4,4))
    
    row1 = np.vstack((cov1,cov_zeros))    
    row2 = np.vstack((cov_zeros,cov2))

    comb_cov = np.hstack((row1,row2))  
    ################################################################################# 
    #cov (midpoint) = J V J^T        
    covi = np.dot(J, np.dot(comb_cov, J.T))

    return covi
    #exit(0)
######################################################################################################################################################################### 
######################################################################################################################################################################### 
 
def get_midpoint_error_prop_covs(pars, pars1, cov1, cov2):

    p1x = pars[0]
    p1y = pars[1]
    p1z = pars[2]
    
    d1x = pars[3]
    d1y = pars[4]
    d1z = pars[5] 
    
    p2x = pars1[0]
    p2y = pars1[1]
    p2z = pars1[2]
    
    d2x = pars1[3]
    d2y = pars1[4]
    d2z = pars1[5] 
    
    #################################################################################     
    # jacobians of the two closest points of the line pair
    # calculated by matlab and copied in here
    J1 =  np.array([[ (d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))) + 1,    -(d1x*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))),    -(d1x*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), - ((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))) - (d1x*(d2x*d2y*(p1y - p2y) - (p1x - p2x)*(d2y**2 + d2z**2) + d2x*d2z*(p1z - p2z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))) - (d1x*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z) + d1x*(d2y**2 + d2z**2) - d2x*d1y*d2y - d2x*d1z*d2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2,                                                                                                                                                                                                                                                                                                                                                                                       (d1x*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z) - d1y*(d2x**2 + d2z**2) + d1x*d2x*d2y + d2y*d1z*d2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1x*(d2x*d2y*(p1x - p2x) - (p1y - p2y)*(d2x**2 + d2z**2) + d2y*d2z*(p1z - p2z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))),                                                                                                                                                                                                                                                                                                                                                                                       (d1x*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z) - d1z*(d2x**2 + d2y**2) + d1x*d2x*d2z + d1y*d2y*d2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1x*(d2x*d2z*(p1x - p2x) - (p1z - p2z)*(d2x**2 + d2y**2) + d2y*d2z*(p1y - p2y)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), -(d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1x*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1x*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1x*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1y*(d1x*d2y - 2*d2x*d1y) + d1x*(d1y*d2y + d1z*d2z) + d1z*(d1x*d2z - 2*d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1x*((p1y - p2y)*(d1x*d2y - 2*d2x*d1y) + (p1x - p2x)*(d1y*d2y + d1z*d2z) + (p1z - p2z)*(d1x*d2z - 2*d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1x*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1y*(d1x*d2x + d1z*d2z) - d1x*(2*d1x*d2y - d2x*d1y) + d1z*(d1y*d2z - 2*d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1x*((p1y - p2y)*(d1x*d2x + d1z*d2z) - (p1x - p2x)*(2*d1x*d2y - d2x*d1y) + (p1z - p2z)*(d1y*d2z - 2*d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1x*((p1x - p2x)*(2*d1x*d2z - d2x*d1z) - (p1z - p2z)*(d1x*d2x + d1y*d2y) + (p1y - p2y)*(2*d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))) - (d1x*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1x*(2*d1x*d2z - d2x*d1z) - d1z*(d1x*d2x + d1y*d2y) + d1y*(2*d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2],
    [     (d1y*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), 1 - (d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))),    -(d1y*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))),                                                                                                                                                                                                                                                                                                                                                                                       - (d1y*(d2x*d2y*(p1y - p2y) - (p1x - p2x)*(d2y**2 + d2z**2) + d2x*d2z*(p1z - p2z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))) - (d1y*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z) + d1x*(d2y**2 + d2z**2) - d2x*d1y*d2y - d2x*d1z*d2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2, (d1y*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z) - d1y*(d2x**2 + d2z**2) + d1x*d2x*d2y + d2y*d1z*d2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1y*(d2x*d2y*(p1x - p2x) - (p1y - p2y)*(d2x**2 + d2z**2) + d2y*d2z*(p1z - p2z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))) - ((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))),                                                                                                                                                                                                                                                                                                                                                                                       (d1y*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z) - d1z*(d2x**2 + d2y**2) + d1x*d2x*d2z + d1y*d2y*d2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1y*(d2x*d2z*(p1x - p2x) - (p1z - p2z)*(d2x**2 + d2y**2) + d2y*d2z*(p1y - p2y)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), -(d1y*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1y*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1y*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1y*(d1x*d2y - 2*d2x*d1y) + d1x*(d1y*d2y + d1z*d2z) + d1z*(d1x*d2z - 2*d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1y*((p1y - p2y)*(d1x*d2y - 2*d2x*d1y) + (p1x - p2x)*(d1y*d2y + d1z*d2z) + (p1z - p2z)*(d1x*d2z - 2*d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1y*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1y*(d1x*d2x + d1z*d2z) - d1x*(2*d1x*d2y - d2x*d1y) + d1z*(d1y*d2z - 2*d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1y*((p1y - p2y)*(d1x*d2x + d1z*d2z) - (p1x - p2x)*(2*d1x*d2y - d2x*d1y) + (p1z - p2z)*(d1y*d2z - 2*d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1y*((p1x - p2x)*(2*d1x*d2z - d2x*d1z) - (p1z - p2z)*(d1x*d2x + d1y*d2y) + (p1y - p2y)*(2*d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))) - (d1y*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1x*(2*d1x*d2z - d2x*d1z) - d1z*(d1x*d2x + d1y*d2y) + d1y*(2*d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2],
    [     (d1z*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))),    -(d1z*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), 1 - (d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))),                                                                                                                                                                                                                                                                                                                                                                                       - (d1z*(d2x*d2y*(p1y - p2y) - (p1x - p2x)*(d2y**2 + d2z**2) + d2x*d2z*(p1z - p2z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))) - (d1z*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z) + d1x*(d2y**2 + d2z**2) - d2x*d1y*d2y - d2x*d1z*d2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2,                                                                                                                                                                                                                                                                                                                                                                                       (d1z*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z) - d1y*(d2x**2 + d2z**2) + d1x*d2x*d2y + d2y*d1z*d2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1z*(d2x*d2y*(p1x - p2x) - (p1y - p2y)*(d2x**2 + d2z**2) + d2y*d2z*(p1z - p2z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1z*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z) - d1z*(d2x**2 + d2y**2) + d1x*d2x*d2z + d1y*d2y*d2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1z*(d2x*d2z*(p1x - p2x) - (p1z - p2z)*(d2x**2 + d2y**2) + d2y*d2z*(p1y - p2y)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))) - ((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), -(d1z*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1z*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1z*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1y*(d1x*d2y - 2*d2x*d1y) + d1x*(d1y*d2y + d1z*d2z) + d1z*(d1x*d2z - 2*d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1z*((p1y - p2y)*(d1x*d2y - 2*d2x*d1y) + (p1x - p2x)*(d1y*d2y + d1z*d2z) + (p1z - p2z)*(d1x*d2z - 2*d2x*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1z*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1y*(d1x*d2x + d1z*d2z) - d1x*(2*d1x*d2y - d2x*d1y) + d1z*(d1y*d2z - 2*d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2 - (d1z*((p1y - p2y)*(d1x*d2x + d1z*d2z) - (p1x - p2x)*(2*d1x*d2y - d2x*d1y) + (p1z - p2z)*(d1y*d2z - 2*d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))), (d1z*((p1x - p2x)*(2*d1x*d2z - d2x*d1z) - (p1z - p2z)*(d1x*d2x + d1y*d2y) + (p1y - p2y)*(2*d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))) - (d1z*((d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1x*(2*d1x*d2z - d2x*d1z) - d1z*(d1x*d2x + d1y*d2y) + d1y*(2*d1y*d2z - d2y*d1z)))/(d1y*(d2x*(d1x*d2y - d2x*d1y) - d2z*(d1y*d2z - d2y*d1z)) - d1x*(d2y*(d1x*d2y - d2x*d1y) + d2z*(d1x*d2z - d2x*d1z)) + d1z*(d2x*(d1x*d2z - d2x*d1z) + d2y*(d1y*d2z - d2y*d1z)))**2]])
     
    J2 =  np.array([[ -(d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2x*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2x*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2x*((p1y - p2y)*(2*d1x*d2y - d2x*d1y) - (p1x - p2x)*(d1y*d2y + d1z*d2z) + (p1z - p2z)*(2*d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) - (d2x*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2y*(2*d1x*d2y - d2x*d1y) - d2x*(d1y*d2y + d1z*d2z) + d2z*(2*d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2, (d2x*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2x*(d1x*d2y - 2*d2x*d1y) + d2y*(d1x*d2x + d1z*d2z) - d2z*(2*d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2 - (d2x*((p1x - p2x)*(d1x*d2y - 2*d2x*d1y) + (p1y - p2y)*(d1x*d2x + d1z*d2z) - (p1z - p2z)*(2*d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2x*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2z*(d1x*d2x + d1y*d2y) + d2x*(d1x*d2z - 2*d2x*d1z) + d2y*(d1y*d2z - 2*d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2 - (d2x*((p1x - p2x)*(d1x*d2z - 2*d2x*d1z) + (p1z - p2z)*(d1x*d2x + d1y*d2y) + (p1y - p2y)*(d1y*d2z - 2*d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) + 1,    -(d2x*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))),    -(d2x*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), ((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) - (d2x*(d1x*d1y*(p1y - p2y) - (p1x - p2x)*(d1y**2 + d1z**2) + d1x*d1z*(p1z - p2z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) + (d2x*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z) - d2x*(d1y**2 + d1z**2) + d1x*d1y*d2y + d1x*d1z*d2z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2,                                                                                                                                                                                                                                                                                                                                                                                       (d2x*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1z*(d1y*d2z - d2y*d1z) - d1x*(d1x*d2y - d2x*d1y) - d2y*(d1x**2 + d1z**2) + d1x*d2x*d1y + d1y*d1z*d2z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2 - (d2x*(d1x*d1y*(p1x - p2x) - (p1y - p2y)*(d1x**2 + d1z**2) + d1y*d1z*(p1z - p2z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))),                                                                                                                                                                                                                                                                                                                                                                                     - (d2x*(d1x*d1z*(p1x - p2x) - (p1z - p2z)*(d1x**2 + d1y**2) + d1y*d1z*(p1y - p2y)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) - (d2x*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z) + d2z*(d1x**2 + d1y**2) - d1x*d2x*d1z - d1y*d2y*d1z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2],
    [ -(d2y*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2y*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2y*((p1y - p2y)*(2*d1x*d2y - d2x*d1y) - (p1x - p2x)*(d1y*d2y + d1z*d2z) + (p1z - p2z)*(2*d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) - (d2y*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2y*(2*d1x*d2y - d2x*d1y) - d2x*(d1y*d2y + d1z*d2z) + d2z*(2*d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2, (d2y*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2x*(d1x*d2y - 2*d2x*d1y) + d2y*(d1x*d2x + d1z*d2z) - d2z*(2*d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2 - (d2y*((p1x - p2x)*(d1x*d2y - 2*d2x*d1y) + (p1y - p2y)*(d1x*d2x + d1z*d2z) - (p1z - p2z)*(2*d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2y*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2z*(d1x*d2x + d1y*d2y) + d2x*(d1x*d2z - 2*d2x*d1z) + d2y*(d1y*d2z - 2*d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2 - (d2y*((p1x - p2x)*(d1x*d2z - 2*d2x*d1z) + (p1z - p2z)*(d1x*d2x + d1y*d2y) + (p1y - p2y)*(d1y*d2z - 2*d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))),     (d2y*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), 1 - (d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))),    -(d2y*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))),                                                                                                                                                                                                                                                                                                                                                                                       (d2y*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z) - d2x*(d1y**2 + d1z**2) + d1x*d1y*d2y + d1x*d1z*d2z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2 - (d2y*(d1x*d1y*(p1y - p2y) - (p1x - p2x)*(d1y**2 + d1z**2) + d1x*d1z*(p1z - p2z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), ((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) - (d2y*(d1x*d1y*(p1x - p2x) - (p1y - p2y)*(d1x**2 + d1z**2) + d1y*d1z*(p1z - p2z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) + (d2y*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1z*(d1y*d2z - d2y*d1z) - d1x*(d1x*d2y - d2x*d1y) - d2y*(d1x**2 + d1z**2) + d1x*d2x*d1y + d1y*d1z*d2z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2,                                                                                                                                                                                                                                                                                                                                                                                     - (d2y*(d1x*d1z*(p1x - p2x) - (p1z - p2z)*(d1x**2 + d1y**2) + d1y*d1z*(p1y - p2y)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) - (d2y*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z) + d2z*(d1x**2 + d1y**2) - d1x*d2x*d1z - d1y*d2y*d1z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2],
    [ -(d2z*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2z*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2z*((p1y - p2y)*(2*d1x*d2y - d2x*d1y) - (p1x - p2x)*(d1y*d2y + d1z*d2z) + (p1z - p2z)*(2*d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) - (d2z*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2y*(2*d1x*d2y - d2x*d1y) - d2x*(d1y*d2y + d1z*d2z) + d2z*(2*d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2, (d2z*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2x*(d1x*d2y - 2*d2x*d1y) + d2y*(d1x*d2x + d1z*d2z) - d2z*(2*d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2 - (d2z*((p1x - p2x)*(d1x*d2y - 2*d2x*d1y) + (p1y - p2y)*(d1x*d2x + d1z*d2z) - (p1z - p2z)*(2*d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), (d2z*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d2z*(d1x*d2x + d1y*d2y) + d2x*(d1x*d2z - 2*d2x*d1z) + d2y*(d1y*d2z - 2*d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2 - (d2z*((p1x - p2x)*(d1x*d2z - 2*d2x*d1z) + (p1z - p2z)*(d1x*d2x + d1y*d2y) + (p1y - p2y)*(d1y*d2z - 2*d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))),     (d2z*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))),    -(d2z*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), 1 - (d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))),                                                                                                                                                                                                                                                                                                                                                                                       (d2z*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z) - d2x*(d1y**2 + d1z**2) + d1x*d1y*d2y + d1x*d1z*d2z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2 - (d2z*(d1x*d1y*(p1y - p2y) - (p1x - p2x)*(d1y**2 + d1z**2) + d1x*d1z*(p1z - p2z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))),                                                                                                                                                                                                                                                                                                                                                                                       (d2z*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1z*(d1y*d2z - d2y*d1z) - d1x*(d1x*d2y - d2x*d1y) - d2y*(d1x**2 + d1z**2) + d1x*d2x*d1y + d1y*d1z*d2z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2 - (d2z*(d1x*d1y*(p1x - p2x) - (p1y - p2y)*(d1x**2 + d1z**2) + d1y*d1z*(p1z - p2z)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))), ((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) - (d2z*(d1x*d1z*(p1x - p2x) - (p1z - p2z)*(d1x**2 + d1y**2) + d1y*d1z*(p1y - p2y)))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))) - (d2z*((d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z))*(p1y - p2y) - (d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z))*(p1x - p2x) + (d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z))*(p1z - p2z))*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z) + d2z*(d1x**2 + d1y**2) - d1x*d2x*d1z - d1y*d2y*d1z))/(d2y*(d1x*(d1x*d2y - d2x*d1y) - d1z*(d1y*d2z - d2y*d1z)) - d2x*(d1y*(d1x*d2y - d2x*d1y) + d1z*(d1x*d2z - d2x*d1z)) + d2z*(d1x*(d1x*d2z - d2x*d1z) + d1y*(d1y*d2z - d2y*d1z)))**2]])
        
    J = 0.5*(J1 + J2)   
    ################################################################################# 
            
    #################################################################################     
    #combined covariance matrix, block (v1   0
    #                                   0    v2)    
    cov1 = cov1.reshape((6,6))    
    cov2 = cov2.reshape((6,6))    
    cov_zeros = np.zeros((6,6))
    
    row1 = np.vstack((cov1,cov_zeros))    
    row2 = np.vstack((cov_zeros,cov2))

    comb_cov = np.hstack((row1,row2))  
    ################################################################################# 
    #cov (midpoint) = J V J^T        
    covi = np.dot(J, np.dot(comb_cov, J.T))

    return covi
    #exit(0)
